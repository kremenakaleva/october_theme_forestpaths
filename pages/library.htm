url = "/library"
layout = "default"
title = "Library"
is_hidden = 0
robot_index = "index"
robot_follow = "follow"
header_image = "library.jpg"

[LibraryPage]
templates = "template6"
has_search = 1
add_file_name = 1
no_records_message = "No records found"
==
<?php
use Pensoft\Library\Classes\ZipFiles;
use Pensoft\Library\Models\Library;

function onStart(){
	$options = post('Filter', []);

	extract(
            array_merge([
                'sort' => 'year desc',
                'type' => 0,
                ], $options)
    );

$this['mySortOptions'] = [
    'year desc' => 'Year (desc)',
    'year asc' => 'Year (asc)',
    'title desc' => 'Title (desc)',
    'title asc' => 'Title (asc)',
];

$library = Library::isVisible()->listFrontEnd($options)->orderBy('year', 'desc');

if(post('Filter')){
    switch (post('Filter')['type']){
        case 1:
        $library =Library::where('type', 5)->orderByRAW("nullif(regexp_replace(title, '[^0-9]', '', 'g'),'')::int")->orderBy('title', 'ASC');
        break;
        case 2:
        $library =Library::where('type', '!=', 5)->where('derived', 2)->orderBy('year', 'desc');
        break;
        case 3:
        $library =Library::where('type', '!=', 5)->where('derived', 1)->orderBy('year', 'desc');
        break;
        case 0:
        $library =Library::isVisible()->orderBy('year', 'desc');
        break;
    }


    if(in_array(post('Filter')['sort'], array_keys($this['mySortOptions']))){
        $parts = explode(' ', $sort);
        list($sortField, $sortDirection) = $parts;

        if($sortField == 'title'){
            $library->orderByRAW("nullif(regexp_replace(title, '[^0-9]', '', 'g'),'')::int")->orderBy('title', $sortDirection);
        }else{
            $library->orderBy($sortField, $sortDirection);
        }
    }
}



$this['type'] = post('Filter') ? post('Filter')['type'] : null;
$this['sort'] = post('Filter') ? post('Filter')['sort'] : null;
$this['query'] = get('query') ?: null;



if($query = get('query')){
    $library = $library->where('title', 'iLIKE', '%' . $query . '%')
                    ->orwhere('authors', 'iLIKE', '%' . $query . '%')
                    ->orwhere('journal_title', 'iLIKE', '%' . $query . '%')
                    ->orwhere('publisher', 'iLIKE', '%' . $query . '%');
}

$this['data'] = $library->paginate(15, ['*'], 'p');


$this['total_file_size_bites'] = $this['data']->reduce(function ($carry, $item) {
    if ($item->file) {
        return $carry + $item->file->file_size;
    }
    return $carry;
}, 0);
$this['total_file_size'] = $this['total_file_size_bites'];

}
?>
==
<div class="container">
	<div class="tabs" id="mylibraryForm">


		{{ form_ajax( 'onStart',
		{update: { 'components/libraries': '#partialLibraries' }}) }}
		<input type="hidden" name="Filter[type]" value="0">
        <input type="hidden" name="Filter[sort]" value="{{sort}}">
		<a>All documents</a>
		{{ form_close() }}


		{{ form_ajax( 'onStart',
		{update: { 'components/libraries': '#partialLibraries' }}) }}
		<input type="hidden" name="Filter[type]" value="1">
        <input type="hidden" name="Filter[sort]" value="{{sort}}">
		<a>Deliverables</a>
		{{ form_close() }}


		{{ form_ajax( 'onStart',
		{update: { 'components/libraries': '#partialLibraries' }}) }}
		<input type="hidden" name="Filter[type]" value="3">
        <input type="hidden" name="Filter[sort]" value="{{sort}}">
		<a>{{this.theme.site_name}} publications</a>
		{{ form_close() }}


		{{ form_ajax( 'onStart',
		{update: { 'components/libraries': '#partialLibraries' }}) }}
		<input type="hidden" name="Filter[type]" value="2">
        <input type="hidden" name="Filter[sort]" value="{{sort}}">
		<a>Relevant publications</a>
		{{ form_close() }}



	</div>

    {% component 'LibraryPage' %}




</div>